#!/bin/bash

#Fail this script should any operation fail
set -e
set -o pipefail

# Input variables
##########

declare GITHUB_KEY_EMAIL="";
declare FULL_NAME="";
declare READ_PASSWORD_FROM_STDIN=false;
declare GITHUB_KEY_PASS;
declare INTERACTIVE_MODE=true;

# Utility functions
##########

function enforce_root {
    if [ "$(whoami)" != "root" ];
    then
        echo "Please re-run this script as root (eg: 'sudo bash <script>')";
        exit;
    fi
}

# Checks, user input, and input validation
##########

enforce_root;

while getopts 'e:n:pzh' option
do
    case $option in
        e ) GITHUB_KEY_EMAIL=${OPTARG}; ;;
        n ) FULL_NAME=${OPTARG}; ;;
        p ) READ_PASSWORD_FROM_STDIN=true; ;;
        z ) INTERACTIVE_MODE=false; ;;
        h ) echo "Help (-h): See readme.md for script arguments and other info."; exit; ;;
    esac
done

read GITHUB_KEY_PASS

echo "This script will install git, configure your name and email for commits, and create a password protected RSA key (in ~/.ssh/id_rsa) to use with GitHub"

# The config script
##########

echo "Ensuring git is installed"
apt-get update
apt-get -y install git

echo "Configuring git"
su - $SUDO_USER -c "
git config --global user.name ${FULL_NAME}
git config --global user.email ${GITHUB_KEY_EMAIL}"

echo "Generating SSH key to use with github"
su - $SUDO_USER -c "
mkdir -p ~/.ssh
chmod 0700 ~/.ssh"
if ! $INTERACTIVE_MODE;
then
    echo "Deleting id_rsa and id_rsa.pub if they already exist."
    \\rm -f ~/.ssh/id_rsa
    \\rm -f ~/.ssh/id_rsa.pub
fi
su - $SUDO_USER -c "ssh-keygen -t rsa -b 4096 -C ${GITHUB_KEY_EMAIL} -N ${GITHUB_KEY_PASS} -f ~/.ssh/id_rsa"

echo "

**********
Thats all!"
echo "Add the following SSH public key to github:"
cat ~/.ssh/id_rsa.pub
